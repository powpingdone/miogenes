import { VerticalBox , HorizontalBox, Button, Slider} from "std-widgets.slint";

export global PlayerCB {
	in-out property <bool> loaded: false;
	in property <image> cover_art;
	in property <string> title;
	in property <string> artist;
	in property <string> album;
	in-out property <float> playback_pos: 0.0;
	in property <float> length;
	in property <bool> playing: false;

	// player controls
	callback next();
	callback prev();
	callback pause();
	callback play();
	callback seek(float);
}

export component Player inherits VerticalBox {
	alignment: LayoutAlignment.center;

	// TODO: Replicate the layout of a regular player thingy
	if (!PlayerCB.loaded): Text { text: @tr("Not playing...");}
	// else
	if (PlayerCB.loaded):
	VerticalBox {
		alignment: LayoutAlignment.stretch;
		Image {
			source: PlayerCB.cover_art;
		}
		
		Text {
			text: PlayerCB.title;
		}

		Text {
			text: PlayerCB.artist + " - " + PlayerCB.album;
		}

		HorizontalBox {
			alignment: LayoutAlignment.center;
			Button {
				text: @tr("Previous");
				clicked() => { PlayerCB.prev() }
			}
			
			Button {
				text: PlayerCB.playing ? @tr("Pause") : @tr("Play");
				clicked() => { PlayerCB.playing ? PlayerCB.pause() : PlayerCB.play() }
			}

			Button {
				text: @tr("Next");
				clicked() => { PlayerCB.next() }
			}
		}

		Slider {
			minimum: 0.0;
			maximum: PlayerCB.length;
			value: PlayerCB.playback-pos;
			changed(val) => { PlayerCB.seek(val) }
		}
	}
}
